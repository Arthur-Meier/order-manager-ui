@model OrderManager.Models.Order

<div class="container mt-4">
    <h2 class="text-center mb-4">Novo Pedido</h2>

    <div class="card shadow-lg p-4">
        <form asp-action="Create" method="post">
            <div class="mb-3">
                <label for="ClientId" class="form-label">Cliente:</label>
                <select id="ClientId" name="ClientId" class="form-select" required>
                    <option value="">Selecione um Cliente</option>
                    @foreach (var client in ViewBag.Clients)
                    {
                        <option value="@client.Id">@client.Name</option>
                    }
                </select>
                <span asp-validation-for="ClientId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="OrderDate" class="form-label">Data do Pedido:</label>
                <input type="date" id="OrderDate" name="OrderDate" class="form-control" required />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>

            <h4 class="mt-4">Itens do Pedido</h4>

            <div id="items-container" class="card p-3 mb-3">
                <div class="item-row row g-2">
                    <div class="col-md-4">
                        <label for="Items_0__Name" class="form-label">Produto:</label>
                        <input type="text" name="Items[0].Name" class="form-control" required />
                        <span asp-validation-for="Items[0].Name" class="text-danger"></span>
                    </div>
                    <div class="col-md-2">
                        <label for="Items_0__Price" class="form-label">Preço Unitário:</label>
                        <input type="number" name="Items[0].Price" class="form-control unit-price" step="0.01" required onchange="updateTotal()" />
                        <span asp-validation-for="Items[0].Price" class="text-danger"></span>
                    </div>
                    <div class="col-md-2">
                        <label for="Items_0__Quantity" class="form-label">Quantidade:</label>
                        <input type="number" name="Items[0].Quantity" class="form-control quantity" required onchange="updateTotal()" />
                        <span asp-validation-for="Items[0].Quantity" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <label for="Items_0__Total" class="form-label">Total:</label>
                        <input type="number" name="Items[0].Total" class="form-control" disabled />
                    </div>
                </div>
            </div>

            <button type="button" class="btn btn-secondary mb-3" onclick="addItem()">Adicionar Item</button>

            <div class="mb-3">
                <label for="TotalValue" class="form-label">Valor Total:</label>
                <input type="number" id="TotalValue" name="TotalValue" class="form-control" readonly />
            </div>

            <div class="d-flex justify-content-between">
                <a href="/Order/Index" class="btn btn-outline-danger">Voltar</a>
                <button type="submit" class="btn btn-primary">Salvar</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let itemCount = 1;

        function addItem() {
            const container = document.getElementById("items-container");

            const newItemRow = document.createElement("div");
            newItemRow.classList.add("item-row", "row", "g-2", "mt-2");

            newItemRow.innerHTML = `
                <div class="col-md-4">
                    <label for="Items_${itemCount}__Name" class="form-label">Produto:</label>
                    <input type="text" name="Items[${itemCount}].Name" class="form-control" required />
                    <span asp-validation-for="Items[${itemCount}].Name" class="text-danger"></span>
                </div>
                <div class="col-md-2">
                    <label for="Items_${itemCount}__Price" class="form-label">Preço Unitário:</label>
                    <input type="number" name="Items[${itemCount}].Price" class="form-control unit-price" step="0.01" required onchange="updateTotal()" />
                    <span asp-validation-for="Items[${itemCount}].Price" class="text-danger"></span>
                </div>
                <div class="col-md-2">
                    <label for="Items_${itemCount}__Quantity" class="form-label">Quantidade:</label>
                    <input type="number" name="Items[${itemCount}].Quantity" class="form-control quantity" required onchange="updateTotal()" />
                    <span asp-validation-for="Items[${itemCount}].Quantity" class="text-danger"></span>
                </div>
                <div class="col-md-3">
                    <label for="Items_${itemCount}__Total" class="form-label">Total:</label>
                    <input type="number" name="Items[${itemCount}].Total" class="form-control" disabled />
                </div>
            `;
            
            container.appendChild(newItemRow);
            itemCount++;
        }

        function updateTotal() {
            let totalValue = 0;
            const unitPrices = document.querySelectorAll(".unit-price");
            const quantities = document.querySelectorAll(".quantity");
            
            unitPrices.forEach((unitPrice, index) => {
                const quantity = quantities[index];
                const totalInput = unitPrice.closest(".item-row").querySelector("input[name*='Total']");

                const price = parseFloat(unitPrice.value) || 0;
                const qty = parseInt(quantity.value) || 0;
                
                const total = price * qty;
                totalInput.value = total.toFixed(2);
                
                totalValue += total;
            });

            document.getElementById("TotalValue").value = totalValue.toFixed(2);
        }
    </script>
}
